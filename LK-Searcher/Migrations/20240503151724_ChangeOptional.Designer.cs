// <auto-generated />
using System;
using LK_Searcher;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace LK_Searcher.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20240503151724_ChangeOptional")]
    partial class ChangeOptional
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AuthorPublish", b =>
                {
                    b.Property<int>("AuthorsId")
                        .HasColumnType("integer");

                    b.Property<int>("PublishesId")
                        .HasColumnType("integer");

                    b.HasKey("AuthorsId", "PublishesId");

                    b.HasIndex("PublishesId");

                    b.ToTable("AuthorPublish");
                });

            modelBuilder.Entity("LK_Searcher.EntityModels.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Faculty")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FatherName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ScopusAuthorId")
                        .HasColumnType("text");

                    b.Property<string>("SpinCode")
                        .HasColumnType("text");

                    b.Property<string>("WOSAuthorId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("LK_Searcher.EntityModels.Publish", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("DocumentType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PublishTitle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PublishYear")
                        .HasColumnType("integer");

                    b.Property<int?>("ScopusFileId")
                        .HasColumnType("integer");

                    b.Property<string>("SourceTitle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("WOSFileId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ScopusFileId");

                    b.HasIndex("WOSFileId");

                    b.ToTable("Publishes");
                });

            modelBuilder.Entity("LK_Searcher.EntityModels.ScopusFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("DocumentType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PublishTitle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PublishYear")
                        .HasColumnType("integer");

                    b.Property<string>("SourceTitle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ScopusFiles");
                });

            modelBuilder.Entity("LK_Searcher.EntityModels.WOSFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("DocumentType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PublishTitle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PublishYear")
                        .HasColumnType("integer");

                    b.Property<string>("SourceTitle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("WOSFiles");
                });

            modelBuilder.Entity("AuthorPublish", b =>
                {
                    b.HasOne("LK_Searcher.EntityModels.Author", null)
                        .WithMany()
                        .HasForeignKey("AuthorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LK_Searcher.EntityModels.Publish", null)
                        .WithMany()
                        .HasForeignKey("PublishesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LK_Searcher.EntityModels.Publish", b =>
                {
                    b.HasOne("LK_Searcher.EntityModels.ScopusFile", "ScopusFile")
                        .WithMany()
                        .HasForeignKey("ScopusFileId");

                    b.HasOne("LK_Searcher.EntityModels.WOSFile", "WOSFile")
                        .WithMany()
                        .HasForeignKey("WOSFileId");

                    b.Navigation("ScopusFile");

                    b.Navigation("WOSFile");
                });
#pragma warning restore 612, 618
        }
    }
}
